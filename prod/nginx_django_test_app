# create this file in /etc/nginx/sites_available
# and create a symlink in sites-enabled with
# cd /etc/nginx/sites-enabled
# ln -s ../sites-available/this_file_name_you_chose
# (sudo) systemctl enable nginx.service
# (sudo) systemctl start nginx

# Configuration du server
server {
    # use 'listen 80 deferred;' for Linux instead of listen 80;
    # use 'listen 80 accept_filter=httpready;' for FreeBSD
    listen 80 deferred;
    client_max_body_size 4G;

    # set the correct host(s) for your site
    server_name example.com www.example.com;
    server_name 192.168.0.217 127.0.0.1;

    keepalive_timeout 5;
    charset     utf-8;

    access_log /home/elk/app/nginx/django_test_app.log;
    error_log /home/elk/app/nginx/django_test_app.log;

    # path for static files
    # root /home/elk/app/django_test/static;

    # Fichiers media et statiques, délivrés par nginx directement
    location /media  {
        autoindex on;
        alias /home/elk/app/django_test/media;
    }

    location /static {
        autoindex on;
        alias /home/elk/app/django_test/static;
    }

    location / {
    # checks for static file, if not found proxy to app
        try_files $uri @proxy_to_app;
    }

    # Le reste va vers notre proxy uwsgi
    location @proxy_to_app {
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Host $http_host;
        # we don't want nginx trying to do something clever with
        # redirects, we set the Host: header above already.
        proxy_redirect off;
        proxy_pass http://unix:/run/gunicorn/socket;
    }

    error_page 500 502 503 504 /500.html;
    location = /500.html {
      root /home/elk/app/django_test/static;
    }
}
